#!/bin/bash

# gitcommit - A simple git workflow automation script
# Similar to lazygit but focused on quick add, commit, push workflow

# Colors for better readability
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}=== Git Status ===${NC}"
git status

# Check if there are changes to commit
if [[ -z $(git status -s) ]]; then
    echo -e "${YELLOW}No changes detected in the repository.${NC}"
    exit 0
fi

# Show changes in detail
echo -e "\n${BLUE}=== Changes in Detail ===${NC}"
git diff --stat

# Ask to add all changes
echo -e "\n${YELLOW}Do you want to add all changes? (y/n)${NC}"
read add_response

if [[ $add_response == "y" || $add_response == "Y" ]]; then
    git add .
    echo -e "${GREEN}All changes have been added to staging.${NC}"
else
    echo -e "${YELLOW}No changes were added.${NC}"
    exit 0
fi

# Ask for commit message
echo -e "\n${YELLOW}Enter commit message:${NC}"
read commit_message

if [[ -z "$commit_message" ]]; then
    echo -e "${RED}Commit message cannot be empty. Aborting.${NC}"
    exit 1
fi

# Commit changes
git commit -m "$commit_message"
commit_status=$?

if [[ $commit_status -ne 0 ]]; then
    echo -e "${RED}❌ Error executing git commit: exit status $commit_status${NC}"
    exit $commit_status
else
    echo -e "${GREEN}✅ Changes committed successfully!${NC}"
fi

# Ask to push changes
echo -e "\n${YELLOW}Do you want to push these changes now? (y/n)${NC}"
read push_response

if [[ $push_response == "y" || $push_response == "Y" ]]; then
    # Check if we're on a branch
    current_branch=$(git symbolic-ref --short HEAD 2>/dev/null)
    
    if [[ -z "$current_branch" ]]; then
        echo -e "${RED}Not currently on any branch. Cannot push.${NC}"
        exit 1
    fi
    
    # Push to remote
    echo -e "${BLUE}Pushing to origin/$current_branch...${NC}"
    git push origin $current_branch
    push_status=$?
    
    if [[ $push_status -ne 0 ]]; then
        echo -e "${RED}❌ Error pushing to remote: exit status $push_status${NC}"
        exit $push_status
    else
        echo -e "${GREEN}✅ Changes pushed successfully!${NC}"
    fi
else
    echo -e "${YELLOW}Changes were not pushed.${NC}"
fi

echo -e "${GREEN}Done!${NC}"
